pipeline {
    agent any

    tools {
        // Make sure Gradle is installed on Jenkins agents
        gradle 'GradleJJ' // Ersetze 'Gradle-Version' durch den Namen der Gradle-Version, die du konfiguriert hast
    }

    stages {
        stage('Checkout') {
            steps {
                // Checke das Git-Repository aus
                git 'https://github.com/JaleRaj/DevOpsDemoSpringBoot.git' // Ersetze 'https://github.com/user/repo.git' mit der URL deines Repositories
            }
        }

        stage('Build') {
            steps {
                // Wechsle in das Verzeichnis 'backend', wo sich deine Gradle Build-Skripte befinden
                dir('backend') {
                    // F체hre den Gradle-Build aus
                    sh './gradlew build'
                }
            }
        }
        
        stage('Test') {
            steps {
                dir('backend') {
                    // F체hre Gradle-Tests aus
                    sh './gradlew test'
                }
            }
        }

        stage('Archive') {
            steps {
                dir('backend') {
                    // Archive the build artifacts
                    archiveArtifacts artifacts: 'build/libs/*.jar', fingerprint: true
                }
            }
        }
    }

    post {
        // Post-Actions, z.B. Aufr채umen oder Benachrichtigungen
        success {
            echo 'Build erfolgreich!'
        }
        failure {
            echo 'Build fehlgeschlagen!'
        }
        always {
            echo 'Prozess fertig!'
            // Aktionen, die immer ausgef체hrt werden sollen, egal ob der Build erfolgreich war oder nicht
        }
    }
}
